
normal function - function myFunc() {}
Arrow function - const myFunc = () => {} . Better because "this" keyword behaves normally and better than when used in 
the normal function.
------------------------------
How to import and export a function:
export default person. -> This is the default export.
to import the default -> import person from 'link of js data'. ----you can generically name the import with anyhow you want----

multiple exports example:
export const clean = () => {}
export const baseData = 10;
-----import-------
import {baseData} from 'link to js file'. Curly braces expicitly target specific things from the imported file.
import {clean} from 'link to js file'
--------------------------------------------------
Spread and Rest operator
Rest usage -> function myFunc(...args) {} //the three dots are used to get multiple arguments. Would be merged into an array
Spread usage -> const newArray = [...oldArray, 1, 2] //used to split up array elements
const newObject = {...oldObject, newProp:5} //OR object properties
---------example use-------
const Person = {
    name: "Max",
    age: 54
}

const newPerson = {
    ...Person,
    address: "50 Bodija Estate, Ibadan"
}

console.log(newPerson);
-------------------------------------
Destructuring:
array destructuring -> [a,b] = ["Hello","Max"];
console.log(a) //Hello
console.log(b) //Max
OR
const numbers = [1,2,3];
[num1, num2] = numbers;
console.log(num1, num2);
[num1, ,num3] = numbers;
console.log(num1, num3);

object destructuring -> {name} = {name: 'Max', age:28}
console.log(name) //Max

---- Refresh array functions**
array.map()


JS Array Functions
Not really next-gen JavaScript, but also important: JavaScript array functions like map() , filter() , reduce()  etc.

You'll see me use them quite a bit since a lot of React concepts rely on working with arrays (in immutable ways).

The following page gives a good overview over the various methods you can use on the array prototype - 
feel free to click through them and refresh your knowledge as required: 
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array

Particularly important in this course are:

map()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
find()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
findIndex()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex
filter()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
reduce()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=b
concat()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat?v=b
slice()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
splice()  => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice